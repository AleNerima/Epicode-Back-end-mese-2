// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzeriaApp.Data;

#nullable disable

namespace PizzeriaApp.Migrations
{
    [DbContext(typeof(PizzeriaContextDb))]
    [Migration("20240801083732_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PizzeriaApp.Models.DettaglioOrdine", b =>
                {
                    b.Property<int>("DettaglioOrdineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DettaglioOrdineId"));

                    b.Property<int>("OrdineId")
                        .HasColumnType("int");

                    b.Property<int>("ProdottoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("DettaglioOrdineId");

                    b.HasIndex("OrdineId");

                    b.HasIndex("ProdottoId");

                    b.ToTable("DettagliOrdine");
                });

            modelBuilder.Entity("PizzeriaApp.Models.Ordine", b =>
                {
                    b.Property<int>("OrdineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdineId"));

                    b.Property<bool>("Evaso")
                        .HasColumnType("bit");

                    b.Property<string>("IndirizzoSpedizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("OrdineId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("PizzeriaApp.Models.Prodotto", b =>
                {
                    b.Property<int>("ProdottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdottoId"));

                    b.Property<string>("FotoBase64")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredienti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TempoConsegna")
                        .HasColumnType("int");

                    b.HasKey("ProdottoId");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("Utente", b =>
                {
                    b.Property<int>("UtenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtenteId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UtenteId");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("PizzeriaApp.Models.DettaglioOrdine", b =>
                {
                    b.HasOne("PizzeriaApp.Models.Ordine", "Ordine")
                        .WithMany("DettagliOrdine")
                        .HasForeignKey("OrdineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaApp.Models.Prodotto", "Prodotto")
                        .WithMany("DettagliOrdine")
                        .HasForeignKey("ProdottoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ordine");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("PizzeriaApp.Models.Ordine", b =>
                {
                    b.HasOne("Utente", "Utente")
                        .WithMany("Ordini")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("PizzeriaApp.Models.Ordine", b =>
                {
                    b.Navigation("DettagliOrdine");
                });

            modelBuilder.Entity("PizzeriaApp.Models.Prodotto", b =>
                {
                    b.Navigation("DettagliOrdine");
                });

            modelBuilder.Entity("Utente", b =>
                {
                    b.Navigation("Ordini");
                });
#pragma warning restore 612, 618
        }
    }
}
